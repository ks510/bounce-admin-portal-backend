Resources:
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      # Generate a name based on the stage
      UserPoolName: ${self:custom.stage}-user-pool
      # Set email as an alias
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      # no support for setting email verification by link, set manually from aws console
      Schema:
        - Mutable: True
          Name: email
          Required: True
        - AttributeDataType: String
          Mutable: False
          Name: given_name
          Required: True
        - AttributeDataType: String
          Mutable: False
          Name: family_name
          Required: True
        - AttributeDataType: String
          Mutable: True
          Name: "company_name"
        - AttributeDataType: Number
          Mutable: True
          Name: "customer_ID"


  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      # Generate an app client name based on the stage
      ClientName: ${self:custom.stage}-user-pool-client
      UserPoolId:
        Ref: CognitoUserPool
      ExplicitAuthFlows:
        - ADMIN_NO_SRP_AUTH
      GenerateSecret: false

# Print out the Id of the User Pool that is created
# Names are generated by CloudFormation and unknown beforehand
Outputs:
  UserPoolId:
    Value:
      Ref: CognitoUserPool

  UserPoolClientId:
    Value:
      Ref: CognitoUserPoolClient
